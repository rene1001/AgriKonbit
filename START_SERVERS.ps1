# Script PowerShell pour d√©marrer les serveurs AgriKonbit
# Usage: .\START_SERVERS.ps1

Write-Host "üöÄ D√©marrage des serveurs AgriKonbit..." -ForegroundColor Green
Write-Host ""

# V√©rifier si les dossiers existent
if (-not (Test-Path ".\server")) {
    Write-Host "‚ùå Erreur: Le dossier 'server' n'existe pas!" -ForegroundColor Red
    exit 1
}

if (-not (Test-Path ".\client")) {
    Write-Host "‚ùå Erreur: Le dossier 'client' n'existe pas!" -ForegroundColor Red
    exit 1
}

# Fonction pour v√©rifier si un port est utilis√©
function Test-Port {
    param($Port)
    $connection = Test-NetConnection -ComputerName localhost -Port $Port -InformationLevel Quiet -WarningAction SilentlyContinue
    return $connection
}

# V√©rifier les ports
Write-Host "üîç V√©rification des ports..." -ForegroundColor Yellow

if (Test-Port 3001) {
    Write-Host "‚ö†Ô∏è  Le port 3001 est d√©j√† utilis√©!" -ForegroundColor Yellow
    $response = Read-Host "Voulez-vous tuer le processus? (O/N)"
    if ($response -eq "O" -or $response -eq "o") {
        $process = Get-NetTCPConnection -LocalPort 3001 -ErrorAction SilentlyContinue | Select-Object -ExpandProperty OwningProcess
        if ($process) {
            Stop-Process -Id $process -Force
            Write-Host "‚úÖ Processus arr√™t√©" -ForegroundColor Green
            Start-Sleep -Seconds 2
        }
    }
}

if (Test-Port 3000) {
    Write-Host "‚ö†Ô∏è  Le port 3000 est d√©j√† utilis√©!" -ForegroundColor Yellow
    $response = Read-Host "Voulez-vous tuer le processus? (O/N)"
    if ($response -eq "O" -or $response -eq "o") {
        $process = Get-NetTCPConnection -LocalPort 3000 -ErrorAction SilentlyContinue | Select-Object -ExpandProperty OwningProcess
        if ($process) {
            Stop-Process -Id $process -Force
            Write-Host "‚úÖ Processus arr√™t√©" -ForegroundColor Green
            Start-Sleep -Seconds 2
        }
    }
}

Write-Host ""
Write-Host "üì¶ D√©marrage du serveur Backend (port 3001)..." -ForegroundColor Cyan

# D√©marrer le backend dans une nouvelle fen√™tre
Start-Process powershell -ArgumentList "-NoExit", "-Command", "cd '$PWD\server'; Write-Host 'üîß Backend Server' -ForegroundColor Green; npm start"

Write-Host "‚è≥ Attente de 5 secondes pour que le backend d√©marre..." -ForegroundColor Yellow
Start-Sleep -Seconds 5

Write-Host ""
Write-Host "üåê D√©marrage du serveur Frontend (port 3000)..." -ForegroundColor Cyan

# D√©marrer le frontend dans une nouvelle fen√™tre
Start-Process powershell -ArgumentList "-NoExit", "-Command", "cd '$PWD\client'; Write-Host '‚öõÔ∏è  Frontend Server' -ForegroundColor Blue; npm start"

Write-Host ""
Write-Host "‚úÖ Les serveurs sont en cours de d√©marrage!" -ForegroundColor Green
Write-Host ""
Write-Host "üìã Informations:" -ForegroundColor White
Write-Host "   Backend:  http://localhost:3001" -ForegroundColor Gray
Write-Host "   Frontend: http://localhost:3000" -ForegroundColor Gray
Write-Host "   API Docs: http://localhost:3001/api-docs" -ForegroundColor Gray
Write-Host ""
Write-Host "‚è≥ Patientez quelques secondes pour que les serveurs d√©marrent compl√®tement..." -ForegroundColor Yellow
Write-Host ""
Write-Host "üí° Astuce: V√©rifiez les fen√™tres PowerShell ouvertes pour voir les logs" -ForegroundColor Cyan
Write-Host ""
Write-Host "üåê Ouverture du navigateur dans 10 secondes..." -ForegroundColor Yellow
Start-Sleep -Seconds 10

# Ouvrir le navigateur
Start-Process "http://localhost:3000"

Write-Host ""
Write-Host "‚ú® Termin√©! Les serveurs sont d√©marr√©s." -ForegroundColor Green
Write-Host ""
Write-Host "Pour arr√™ter les serveurs, fermez les fen√™tres PowerShell ou appuyez sur Ctrl+C dans chaque fen√™tre." -ForegroundColor Gray
Write-Host ""
